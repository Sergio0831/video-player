{"version":3,"sources":["components/styles/StyledVideoWrapper.js","components/styles/StyledVideo.js","components/Video.js","components/styles/StyledNightmode.js","components/Nightmode.js","components/styles/StyledPlaylistHeader.js","components/styles/StyledJourney.js","components/PlaylistHeader.js","components/styles/StyledPlaylistItem.js","components/PlaylistItem.js","components/hoc/withLink.js","components/styles/StyledPlaylistItems.js","components/containers/PlaylistItems.js","components/styles/StyledPlaylist.js","components/containers/Playlist.js","components/styles/StyledPlayer.js","components/containers/Player.js","components/styles/GlobalStyle.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["StyledVideoWrapper","styled","div","StyledVideo","Video","active","autoplay","endCallback","progressCallback","controls","width","height","style","position","top","playing","url","video","onEnded","onProgress","StyledNightmode","props","theme","color","Nightmode","nightMode","nightModeCallback","htmlFor","className","type","checked","onChange","id","StyledPlaylistHeader","StyledJourney","PlaylistHeader","total","title","num","StyledPlaylistItem","played","PlaylistItem","duration","withLink","WrappedComponent","newProps","to","pathname","StyledPlaylistitems","PlaylistItemWithLink","PlaylistItems","videos","map","StyledPlaylist","Playlist","length","StyledPlayer","bgColor","border","bgColorItem","bgColorActive","bgColorPlayed","borderPlayed","themeLight","Player","match","history","location","JSON","parse","document","querySelector","value","savedState","localStorage","getItem","playlistId","console","log","useState","playlist","activeVideo","state","setState","useEffect","setItem","stringify","videoId","params","undefined","newActiveVideo","findIndex","prev","push","currentVideoIndex","nextVideo","e","playedSeconds","prevState","GlobalStyle","createGlobalStyle","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0cb054a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledVideoWrapper = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 56.25%;\r\n  position: relative;\r\n`;\r\n\r\nexport default StyledVideoWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledVideo = styled.div`\r\n  position: relative;\r\n  -webkit-box-flex: 2;\r\n  -ms-flex: 2 0 900px;\r\n  flex: 2 0 900px;\r\n  @media screen and (max-width: 1400px) {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default StyledVideo;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport StyledVideoWrapper from \"../components/styles/StyledVideoWrapper\";\r\nimport StyledVideo from \"../components/styles/StyledVideo\";\r\n\r\nconst Video = ({ active, autoplay, endCallback, progressCallback }) => (\r\n  <StyledVideo>\r\n    <StyledVideoWrapper>\r\n      <ReactPlayer\r\n        controls\r\n        width='100%'\r\n        height='100%'\r\n        style={{ position: \"absolute\", top: \"0\" }}\r\n        playing={autoplay}\r\n        url={active.video}\r\n        onEnded={endCallback}\r\n        onProgress={progressCallback}\r\n      />\r\n    </StyledVideoWrapper>\r\n  </StyledVideo>\r\n);\r\n\r\nexport default Video;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledNightmode = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: ${(props) => props.theme.color};\r\n  padding: 0;\r\n  margin: 20px;\r\n  /* CSS taken from https://www.w3schools.com/howto/howto_css_switch.asp */\r\n  /* The switch - the box around the slider */\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 24px;\r\n  }\r\n  /* Hide default HTML checkbox */\r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  /* The slider */\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 16px;\r\n    width: 16px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  input:checked + .slider {\r\n    background-color: #3d5138;\r\n  }\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateX(16px);\r\n    -ms-transform: translateX(16px);\r\n    transform: translateX(16px);\r\n  }\r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 30px;\r\n  }\r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default StyledNightmode;\r\n","import React from \"react\";\r\nimport StyledNightmode from \"../components/styles/StyledNightmode\";\r\n\r\nconst Nightmode = ({ nightMode, nightModeCallback }) => (\r\n  <StyledNightmode>\r\n    <span>Nightmode: </span>\r\n    <label htmlFor='checkbox' className='switch'>\r\n      <input\r\n        type='checkbox'\r\n        checked={nightMode}\r\n        onChange={nightModeCallback}\r\n        id='checkbox'\r\n      />\r\n      <span className='slider round' />\r\n    </label>\r\n  </StyledNightmode>\r\n);\r\n\r\nexport default Nightmode;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistHeader = styled.div`\r\n  background: #696969;\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: #fff;\r\n  padding: 0 20px;\r\n  margin: 0 0 20px 0;\r\n  min-height: 80px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default StyledPlaylistHeader;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledJourney = styled.div`\r\n  background: #565656;\r\n  font-size: 0.8em;\r\n  padding: 2px 5px;\r\n  height: 20px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default StyledJourney;\r\n","import React from \"react\";\r\nimport StyledPlaylistHeader from \"../components/styles/StyledPlaylistHeader\";\r\nimport StyledJourney from \"../components/styles/StyledJourney\";\r\n\r\nconst PlaylistHeader = ({ active, total }) => (\r\n  <StyledPlaylistHeader>\r\n    <p>{active.title}</p>\r\n    <StyledJourney>\r\n      {active.num} / {total}\r\n    </StyledJourney>\r\n  </StyledPlaylistHeader>\r\n);\r\n\r\nexport default PlaylistHeader;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistItem = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: none;\r\n  border: ${(props) => (props.active ? \"2px dotted #696969\" : \"none\")};\r\n  font-size: 1.6em;\r\n  color: ${(props) => props.theme.color};\r\n  min-height: 50px;\r\n  padding: 10px 20px;\r\n  margin: 0 0 10px 0;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: ${(props) => (props.active ? \"5px\" : \"0\")};\r\n  cursor: pointer;\r\n  position: relative;\r\n  ::before {\r\n    display: ${(props) => (props.active || !props.played ? \"none\" : \"block\")};\r\n    content: \"\";\r\n    width: 10px;\r\n    min-height: 10px;\r\n    background: #409f4e;\r\n    border-radius: 50px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 19px;\r\n  }\r\n  .wbn-player__video-nr {\r\n    flex-grow: 1; /* default 0 */\r\n    max-width: 30px;\r\n    padding-right: 20px;\r\n    border-right: 2px solid #565656;\r\n  }\r\n  .wbn-player__video-name,\r\n  .wbn-player__video-name a {\r\n    flex-grow: 10; /* default 0 */\r\n    padding: 0 0 0 10px;\r\n    color: ${(props) => props.theme.color};\r\n    text-align: left;\r\n    text-decoration: none;\r\n    display: block;\r\n  }\r\n  .wbn-player__video-time {\r\n    background: #565656;\r\n    min-width: 45px;\r\n    color: #fff;\r\n    font-size: 0.8em;\r\n    padding: 0px 5px;\r\n    height: 20px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    margin: 0 0 0 5px;\r\n  }\r\n  .wbn-player__video-download {\r\n    flex-grow: 1; /* default 0 */\r\n    color: ${(props) => (props.played ? \"#fff\" : props.theme.color)};\r\n    margin: 0 0 0 20px;\r\n    max-width: 30px;\r\n    padding: 0 20px;\r\n    border-left: 2px solid #565656;\r\n    font-family: \"fontello\";\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n  .wbn-player__video-download a {\r\n    color: ${(props) =>\r\n      props.played && !props.active ? \"#fff\" : props.theme.color};\r\n  }\r\n  .active {\r\n    opacity: 0.1;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylistItem;\r\n","import React from \"react\";\r\nimport StyledPlaylistitem from \"../components/styles/StyledPlaylistItem\";\r\n\r\nconst PlaylistItem = ({ video, active, played }) => (\r\n  <StyledPlaylistitem active={active} played={played}>\r\n    <div className='wbn-player__video-nr'>{video.num}</div>\r\n    <div className='wbn-player__video-name'>{video.title}</div>\r\n    <div className='wbn-player__video-time'>{video.duration}</div>\r\n  </StyledPlaylistitem>\r\n);\r\n\r\nexport default PlaylistItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst withLink = (WrappedComponent) => (props) => {\r\n  const newProps = {\r\n    ...props,\r\n    video: {\r\n      ...props.video,\r\n      title: (\r\n        <Link to={{ pathname: `/${props.video.id}`, autoplay: true }}>\r\n          {props.video.title}\r\n        </Link>\r\n      )\r\n    }\r\n  };\r\n\r\n  return <WrappedComponent {...newProps} />;\r\n};\r\n\r\nexport default withLink;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistitems = styled.div`\r\n  padding: 0 20px 0 20px;\r\n  overflow-y: auto;\r\n  height: 28vw;\r\n  max-height: 500px;\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n    border-radius: 2px;\r\n  }\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylistitems;\r\n","import React from \"react\";\r\nimport PlaylistItem from \"../PlaylistItem\";\r\nimport withLink from \"../hoc/withLink\";\r\nimport StyledPlaylistitems from \"../styles/StyledPlaylistItems\";\r\n\r\nconst PlaylistItemWithLink = withLink(PlaylistItem);\r\n\r\nconst PlaylistItems = ({ videos, active }) => (\r\n  <StyledPlaylistitems>\r\n    {videos.map((video) => (\r\n      <PlaylistItemWithLink\r\n        key={video.id}\r\n        video={video}\r\n        active={video.id === active.id ? true : false}\r\n        played={video.played}\r\n      />\r\n    ))}\r\n  </StyledPlaylistitems>\r\n);\r\n\r\nexport default PlaylistItems;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylist = styled.div`\r\n  -webkit-box-flex: 1;\r\n  -ms-flex: 1 1 450px;\r\n  flex: 1 1 450px;\r\n  overflow: hidden;\r\n  color: white;\r\n  /* height: 0;\r\n  padding-top:50px;\r\n  padding-bottom: 36%; */\r\n  @media screen and (max-width: 1400px) {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylist;\r\n","import React from \"react\";\r\nimport Nightmode from \"../Nightmode\";\r\nimport PlaylistHeader from \"../PlaylistHeader\";\r\nimport PlaylistItems from \"../containers/PlaylistItems\";\r\nimport StyledPlaylist from \"../styles/StyledPlaylist\";\r\n\r\nconst Playlist = ({ videos, active, nightModeCallback, nightMode }) => (\r\n  <StyledPlaylist>\r\n    <Nightmode nightModeCallback={nightModeCallback} nightMode={nightMode} />\r\n    <PlaylistHeader active={active} total={videos.length} />\r\n    <PlaylistItems videos={videos} active={active} />\r\n  </StyledPlaylist>\r\n);\r\n\r\nexport default Playlist;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledPlayer = styled.div`\r\n  background: ${(props) => props.theme.bgColor}; /* #353535; */\r\n  border: ${(props) => props.theme.border};\r\n  max-width: 1800px;\r\n  margin: 0 auto;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  max-height: 863px;\r\n  transition: all 0.5s ease;\r\n  @media screen and (max-width: 1400px) {\r\n    display: block;\r\n    max-height: 10000px;\r\n  }\r\n`;\r\n\r\nexport default StyledPlayer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Video from \"../Video\";\r\nimport Playlist from \"./Playlist\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport StyledPlayer from \"../styles/StyledPlayer\";\r\n\r\nconst theme = {\r\n  bgColor: \"#353535\",\r\n  bgColorItem: \"#414141\",\r\n  bgColorActive: \"#405c63\",\r\n  bgColorPlayed: \"#526d4e\",\r\n  border: \"none\",\r\n  borderPlayed: \"none\",\r\n  color: \"#fff\"\r\n};\r\n\r\nconst themeLight = {\r\n  bgColor: \"#fff\",\r\n  bgColorItem: \"#fff\",\r\n  bgColorActive: \"#86a7b1\",\r\n  bgColorPlayed: \"#7d9979\",\r\n  border: \"1px solid #353535\",\r\n  borderPlayed: \"none\",\r\n  color: \"#353535\"\r\n};\r\n\r\nconst Player = ({ match, history, location }) => {\r\n  const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\r\n  const savedState = JSON.parse(localStorage.getItem(`${videos.playlistId}`));\r\n\r\n  console.log(videos);\r\n\r\n  const [state, setState] = useState({\r\n    videos: savedState ? savedState.videos : videos.playlist,\r\n    activeVideo: savedState ? savedState.activeVideo : videos.playlist[0],\r\n    nightMode: savedState ? savedState.nightMode : true,\r\n    playlistId: savedState ? savedState.playlistId : videos.playlistId,\r\n    autoplay: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`$(state.playlistId)`, JSON.stringify({ ...state }));\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    const videoId = match.params.activeVideo;\r\n\r\n    if (videoId !== undefined) {\r\n      const newActiveVideo = state.videos.findIndex(\r\n        (video) => video.id === videoId\r\n      );\r\n      setState((prev) => ({\r\n        ...prev,\r\n        activeVideo: prev.videos[newActiveVideo],\r\n        autoplay: location.autoplay\r\n      }));\r\n    } else {\r\n      history.push({\r\n        pathname: `/${state.activeVideo.id}`,\r\n        autoplay: false\r\n      });\r\n    }\r\n  }, [\r\n    history,\r\n    location.autoplay,\r\n    match.params.activeVideo,\r\n    state.activeVideo,\r\n    state.activeVideo.id,\r\n    state.videos\r\n  ]);\r\n\r\n  const nightModeCallback = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      nightMode: !prevState.nightMode\r\n    }));\r\n  };\r\n\r\n  const endCallback = (props) => {\r\n    const videoId = props.match.params.activeVideo;\r\n    const currentVideoIndex = state.videos.findIndex(\r\n      (video) => video.id === videoId\r\n    );\r\n\r\n    const nextVideo =\r\n      currentVideoIndex === state.videos.length - 1 ? 0 : currentVideoIndex + 1;\r\n\r\n    props.history.push({\r\n      pathname: `${state.videos[nextVideo].id}`,\r\n      autoplay: false\r\n    });\r\n  };\r\n\r\n  const progressCallback = (e) => {\r\n    if (e.playedSeconds > 10 && e.playedSeconds < 11) {\r\n      // const videos = { ...state.videos };\r\n      // const playedVideo = videos.find(\r\n      //   (video) => video.id === state.activeVideo.id\r\n      // );\r\n\r\n      // playedVideo.played = true;\r\n      // setState((prevState) => ({ ...prevState, videos }));\r\n\r\n      setState({\r\n        ...state,\r\n        videos: state.videos.map((video) => {\r\n          return video.id === state.activeVideo.id\r\n            ? { ...video, played: true }\r\n            : video;\r\n        })\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={state.nightMode ? theme : themeLight}>\r\n      {state.videos !== null ? (\r\n        <StyledPlayer>\r\n          <Video\r\n            active={state.activeVideo}\r\n            autoplay={state.autoplay}\r\n            endCallback={endCallback}\r\n            progressCallback={progressCallback}\r\n          />\r\n          <Playlist\r\n            videos={state.videos}\r\n            active={state.activeVideo}\r\n            nightModeCallback={nightModeCallback}\r\n            nightMode={state.nightMode}\r\n          />\r\n        </StyledPlayer>\r\n      ) : null}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    font-size: 62.5%;\r\n    font-family: 'Hind', sans-serif;\r\n  }\r\n  \r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Player from \"./Player\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport GlobalStyle from \"../styles/GlobalStyle\";\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={Player} />\n      <Route exact path='/:activeVideo' component={Player} />\n    </Switch>\n    <GlobalStyle />\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}